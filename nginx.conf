server_tokens off;

access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

# Max request size
client_max_body_size 20M;
large_client_header_buffers 4 256k;


server {
  listen          80;
  listen          [::]:80;
  server_name     studio.*;

  location / {
    try_files ${DOLLAR}uri @node_server;
  }

  # Node lms-studio UI server
  location @node_server {
    proxy_pass http://127.0.0.1:${STUDIO_PORT};
    proxy_http_version 1.1;
    proxy_set_header Upgrade ${DOLLAR}http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host ${DOLLAR}host;
    proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;
    proxy_cache_bypass ${DOLLAR}http_upgrade;
  }

  location ~ /\.ht {
    deny all;
  }
}


server {
  listen          80;
  listen          [::]:80;
  server_name     directus.*;

  client_max_body_size 3G;

  location / {
    try_files ${DOLLAR}uri @node_server;
  }

  # Node lms-directus UI server
  location @node_server {
    proxy_pass http://127.0.0.1:${DIRECTUS_API_PORT};
    proxy_http_version 1.1;
    proxy_set_header Upgrade ${DOLLAR}http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host ${DOLLAR}host;
    proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;
    proxy_cache_bypass ${DOLLAR}http_upgrade;
  }

  location ~ /\.ht {
    deny all;
  }
}


server {
  listen          80;
  listen          [::]:80;
  server_name     lrs.*;

  root /app/lrs-core/ui/dist/public;

  # xAPI endpoints
  location ~* ^/data/xAPI(.*)${DOLLAR} {
    proxy_pass http://127.0.0.1:${XAPI_PORT}/data/xAPI${DOLLAR}1${DOLLAR}is_args${DOLLAR}args;
  }

  # API endpoints
  location = /api {
    rewrite /api / break;
    proxy_redirect off;
    proxy_pass http://127.0.0.1:${API_PORT};
  }

  location ~* ^/api(.*)${DOLLAR} {
    proxy_pass http://127.0.0.1:${API_PORT}${DOLLAR}1${DOLLAR}is_args${DOLLAR}args;
    proxy_http_version 1.1;
    proxy_set_header Upgrade ${DOLLAR}http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host ${DOLLAR}host;
    proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;
    proxy_cache_bypass ${DOLLAR}http_upgrade;
  }

  # All other traffic directed to statics or Node server
  location / {
    try_files ${DOLLAR}uri @node_server;
  }

  # Node UI server
  location @node_server {
    proxy_pass http://127.0.0.1:${UI_PORT};
    proxy_http_version 1.1;
    proxy_set_header Upgrade ${DOLLAR}http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host ${DOLLAR}host;
    proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;
    proxy_cache_bypass ${DOLLAR}http_upgrade;
  }

  location ~ /\.ht {
    deny all;
  }
}


server {
  listen          80 default_server;
  listen          [::]:80 default_server;
  server_name     _;

  root /var/www/html;

  # Serve files or return 404
  location / {
    try_files ${DOLLAR}uri ${DOLLAR}uri/ =404;
  }
  
  error_page 404 /40x.html;
  location = /40x.html {
    internal;
    root /usr/share/nginx/html;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    internal;
    root /usr/share/nginx/html;
  }

  location /health {
    allow 127.0.0.1;
    deny all;
    return 200 "OK";
  }

  location ~ /\.ht {
    deny all;
  }
}